# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:  
  solutionFile: .\windows\AppServiceSample.sln
  projectFile: .\windows\AppServiceSample.Package\AppServiceSample.Package.wapproj
  platform: x64
  configuration: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v2
         name: Checkout Code
       
       - name: PowerShell script
        # You may pin to the exact commit or the version.
        # uses: Amadevus/pwsh-script@25a636480c7bc678a60bbf4e3e5ac03aca6cf2cd
         uses: Amadevus/pwsh-script@v2.0.0
         with:
            # PowerShell script to execute in Actions-hydrated context
          script: Set-ExecutionPolicy Unrestricted -Scope Process -Force; iex (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/microsoft/react-native-windows/master/vnext/Scripts/rnw-dependencies.ps1')

       - name: Setup Node.js
         uses: actions/setup-node@v1
         with:
           node-version: '12.9.1'

       - name: Setup MSBuild
         uses: microsoft/setup-msbuild@v1
         with:
           vs-version: 16.8
       
       - name: Setup NuGet
         uses: NuGet/setup-nuget@v1

       - name: Check node modules cache
         uses: actions/cache@v1
         id: yarn-cache
         with:
           path: ./node_modules
           key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
           restore-keys: |
            ${{ runner.os }}-yarn-

       - name: Install node modules
         if: steps.yarn-cache.outputs.cache-hit != 'true'
         run: yarn --pure-lockfile
    
       - name: yarn build
         if: steps.yarn-cache.outputs.cache-hit == 'true'
         run: |
          yarn build
          yarn tsc
          
       - name: Build
         run: msbuild /restore ${{env.projectFile}} /p:Configuration=${{env.configuration}} /p:AppxBundlePlatforms=${{env.platform}} /p:AppxPackageDir=${{github.workspace}}\AppPackages /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false
